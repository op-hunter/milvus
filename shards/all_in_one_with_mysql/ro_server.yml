version: 0.1
server_config:
  address: 0.0.0.0                  # milvus server ip address (IPv4)
  port: 19530                       # port range: 1025 ~ 65534
  deploy_mode: cluster_readonly     # deployment type: single, cluster_readonly, cluster_writable
  time_zone: UTC+8

db_config:
  primary_path: /var/lib/milvus     # path used to store data and meta
  secondary_path:                   # path used to store data only, split by semicolon

  backend_url: mysql://root:milvusroot@milvus-mysql:3306/milvus
                                    # URI format: dialect://username:password@host:port/database
                                    # Keep 'dialect://:@:/', and replace other texts with real values
                                    # Replace 'dialect' with 'mysql' or 'sqlite'

  insert_buffer_size: 1             # GB, maximum insert buffer size allowed
                                    # sum of insert_buffer_size and cpu_cache_capacity cannot exceed total memory

  preload_table:                    # preload data at startup, '*' means load all tables, empty value means no preload
                                    # you can specify preload tables like this: table1,table2,table3

metric_config:
  enable_monitor: false             # enable monitoring or not
  collector: prometheus             # prometheus
  prometheus_config:
    port: 8080                      # port prometheus uses to fetch metrics

cache_config:
  cpu_cache_capacity: 4            # GB, CPU memory used for cache
  cpu_cache_threshold: 0.85         # percentage of data that will be kept when cache cleanup is triggered
  gpu_cache_capacity: 1             # GB, GPU memory used for cache
  gpu_cache_threshold: 0.85         # percentage of data that will be kept when cache cleanup is triggered
  cache_insert_data: false          # whether to load inserted data into cache

engine_config:
  use_blas_threshold: 800            # if nq <  use_blas_threshold, use SSE, faster with fluctuated response times
                                    # if nq >= use_blas_threshold, use OpenBlas, slower with stable response times

resource_config:
  search_resources:                 # define the GPUs used for search computation, valid value: gpux
    - gpu0
  index_build_device: gpu0          # GPU used for building index
