server_config:
  address: 0.0.0.0            # milvus server ip address
  port: 19530                 # the port milvus listen to, default: 19530, range: 1025 ~ 65534
  gpu_index: 0                # the gpu milvus use, default: 0, range: 0 ~ gpu number - 1
  mode: single                # milvus deployment type: single, cluster, read_only

db_config:
  db_path: @MILVUS_DB_PATH@             # milvus data storage path
  db_slave_path:                        # secondry data storage path, split by semicolon
  parallel_reduce: false                # use multi-threads to reduce topk result

  # URI format: dialect://username:password@host:port/database
  # All parts except dialect are optional, but you MUST include the delimiters
  # Currently dialect supports mysql or sqlite
  db_backend_url: sqlite://:@:/

  archive_disk_threshold: 0        # triger archive action if storage size exceed this value, 0 means no limit, unit: GB
  archive_days_threshold: 0        # files older than x days will be archived, 0 means no limit, unit: day
  insert_buffer_size: 4            # maximum insert buffer size allowed, default: 4, unit: GB, should be at least 1 GB.
                                   # the sum of insert_buffer_size and cpu_cache_capacity should be less than total memory, unit: GB

metric_config:
  is_startup: off                       # if monitoring start: on, off
  collector: prometheus                 # metrics collector: prometheus
  prometheus_config:                    # following are prometheus configure
    port: 8080                          # the port prometheus use to fetch metrics
    push_gateway_ip_address: 127.0.0.1  # push method configure: push gateway ip address
    push_gateway_port: 9091             # push method configure: push gateway port

cache_config:
  cpu_cache_capacity: 16            # how many memory are used as cache, unit: GB, range: 0 ~ less than total memory
  cpu_cache_free_percent: 0.85      # old data will be erased from cache when cache is full, this value specify how much memory should be kept, range: greater than zero ~ 1.0
  insert_cache_immediately: false   # insert data will be load into cache immediately for hot query
  gpu_cache_capacity: 5             # how many memory are used as cache in gpu, unit: GB, RANGE: 0 ~ less than total memory
  gpu_cache_free_percent: 0.85      # old data will be erased from cache when cache is full, this value specify how much memory should be kept, range: greater than zero ~ 1.0
  gpu_ids: 0,1                      # gpu id

engine_config:
  use_blas_threshold: 20
  metric_type: L2               # compare vectors by euclidean distance(L2) or inner product(IP), optional: L2 or IP
  omp_thread_num: 0             # how many compute threads be used by engine, 0 means use all cpu core to compute

resource_config:
  # resource list, length: 0~N
  # please set a DISK resource and a CPU resource least, or system will not return query result.
  #
  # example:
  # resource_name:               # resource name, just using in connections below
  #   type: DISK                 # resource type, optional: DISK/CPU/GPU
  #   memory: 256                # memory size, unit: GB
  #   device_id: 0
  #   enable_loader: true        # if is enable loader, optional: true, false
  #   enable_executor: false     # if is enable executor, optional: true, false

  resources:
    ssda:
      type: DISK
      memory: 2048
      device_id: 0
      enable_loader: true
      enable_executor: false

    cpu:
      type: CPU
      memory: 64
      device_id: 0
      enable_loader: true
      enable_executor: true

    gtx1060:
      type: GPU
      memory: 6
      device_id: 0
      enable_loader: false
      enable_executor: false

    gtx1660:
      type: GPU
      memory: 6
      device_id: 1
      enable_loader: false
      enable_executor: false

  # connection list, length: 0~N
  # format: -${resource_name}===${resource_name}
  connections:
    - ssda===cpu
    - cpu===gtx1060
    - cpu===gtx1660

